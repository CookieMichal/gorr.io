# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Visit {
  id: Int!
  ip: String
  userAgent: String
  referer: String
  createdAt: DateTime!
  link: Link
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Link {
  id: Int!
  slug: String!
  target: String!
  link: String
  createdAt: DateTime!
  user: User
  visits: [Visit!]
  visitsCount: Float!
}

type User {
  id: Int!
  isActive: Boolean!
  email: String!
  links: [Link!]!
  createdAt: DateTime!
}

type Query {
  users: [User!]!
  me: User!
}

type Mutation {
  activate(token: String!): ActivateUserResponse!
  addUser(input: AddUserInput!): AddUserResponse!
  login(input: LoginInput!): LoginResponse!
  refresh: TokenRefreshResponse!
  addLink(input: AddLinkInput!): AddLinkResponse!
}

union ActivateUserResponse = ActivationSuccessResponse | ActivationInvalidResponse

type ActivationSuccessResponse {
  message: String!
}

type ActivationInvalidResponse {
  message: String!
}

union AddUserResponse = UserSuccessResponse | UserEmailTakenResponse

type UserSuccessResponse {
  message: String!
}

type UserEmailTakenResponse {
  message: String!
}

input AddUserInput {
  email: String!
  password: String!
}

union LoginResponse = LoginSuccessResponse | LoginInvalidResponse | LoginUserInactiveResponse

type LoginSuccessResponse {
  token: String!
  expiryDate: DateTime!
  email: String!
  userId: Float!
}

type LoginInvalidResponse {
  message: String!
}

type LoginUserInactiveResponse {
  message: String!
}

input LoginInput {
  email: String!
  password: String!
}

union TokenRefreshResponse = TokenRefreshSuccessResponse | TokenRefreshFailureResponse

type TokenRefreshSuccessResponse {
  token: String!
  expiryDate: DateTime!
  email: String!
  userId: Float!
}

type TokenRefreshFailureResponse {
  message: String!
}

union AddLinkResponse = LinkSuccessResponse | LinkSlugTakenResponse | LinkIncorrectResponse

type LinkSuccessResponse {
  message: String!
  link: String!
}

type LinkSlugTakenResponse {
  message: String!
}

type LinkIncorrectResponse {
  message: String!
}

input AddLinkInput {
  target: String!
  slug: String
}
